I"<p><em><a href="./index">Back to Consultancy Home</a></em></p>

<p>We will be using a (somewhat) Agile process during the development of this project. This will include:</p>

<ul>
  <li>Working in short 3 or 4 day “Sprints”</li>
  <li>Using GitHub</li>
  <li>Using a project management tool such as Github Projects</li>
  <li>Conducting Story Refinement meetings</li>
  <li>Doing daily check-ins</li>
  <li>Demoing your project to your Project Manager</li>
  <li>Holding Team Retros</li>
</ul>

<p>Note: Additional non standard gems must be approved by your project manager.</p>

<h2 id="sprints">Sprints</h2>

<p>In Agile processes, a sprint is a single cycle of development. The most common length of a sprint is two weeks. During this cycle, teams will assign features, develop those features, demo their work, get feedback, and retro.</p>

<section class="dropdown">
  <h3 id="sprint-breakdowns">Sprint Breakdowns</h3>

  <p>Days/times are subject to change due to holidays.</p>

  <h4 id="sprint-0-inception">Sprint 0: Inception</h4>

  <ul>
    <li>Begin: Monday of Week 4</li>
    <li>End: mid-Week 4</li>
    <li>Deliverables are listed on the <a href="./inception">Inception page</a></li>
    <li>Teams are welcome to move to development <strong>only after instructor review of deliverables</strong>, but the green light can be given before an in-person check-in (i.e. before check-in #2)</li>
  </ul>

  <h4 id="sprint-1-development">Sprint 1: Development</h4>

  <ul>
    <li>Begin: Thursday of Week 4</li>
    <li>End: Monday morning of Week 5</li>
    <li>Example Sprint Goals:
      <ul>
        <li>Back-end API endpoints largely complete</li>
        <li>Skeleton front-end structure built with mock data</li>
        <li>External API integration complete</li>
      </ul>
    </li>
  </ul>

  <h4 id="sprint-2-development">Sprint 2: Development</h4>

  <ul>
    <li>Begin: Monday Afternoon Week 5</li>
    <li>End: Thursday Afternoon Week 5</li>
    <li>Example Sprint Goals:
      <ul>
        <li>Professional-looking front-end</li>
        <li>MVP for each component is met</li>
        <li>FE is consuming BE API endpoints, not mock data</li>
      </ul>
    </li>
  </ul>

  <h4 id="sprint-3-finishing-touches-or-code-freeze">Sprint 3: Finishing Touches or Code Freeze</h4>

  <ul>
    <li>Begin: Thursday Evening Week 5</li>
    <li>End: Saturday Evening Week 5</li>
    <li><strong>What’s a code freeze?</strong>
      <ul>
        <li>New features/functionality are not added (unless totally necessary)</li>
        <li>Time dedicated instead to: debugging, enhanced testing, error handling, presentation preparation, documentation, deployment fixes</li>
      </ul>
    </li>
  </ul>

</section>

<section class="dropdown">
  <h3 id="project-check-in-schedule">Project Check-In Schedule</h3>

  <p>Days/times are subject to change due to holidays. Some check-ins may be async.</p>

  <ul>
    <li>Check-In 1: Speedy Sync
      <ul>
        <li>Tuesday afternoon, in the middle of inception</li>
        <li>During this meeting, you should be prepared to review your preliminary plans with your project manager</li>
        <li>The purpose of this check-in is to highlight potential risks or concerns early on so that teams can pivot quickly</li>
      </ul>
    </li>
    <li>Check-In 2
      <ul>
        <li>Thursday of Week 4</li>
        <li>During this meeting, you should be prepared to review the remaining artifacts from your inception</li>
        <li>During this meeting, your team will draw out the architecture of your application and all should be ready to speak to it</li>
      </ul>
    </li>
    <li>Check In 3
      <ul>
        <li>Monday Week 5</li>
        <li>During this check in, you will discuss any adjustments you might need to make to your MVP</li>
        <li>Review retro notes with your PM</li>
        <li>You can also use this check in as an opportunity to ask any questions and get help for the final few week of the project.</li>
      </ul>
    </li>
    <li>Check In 4
      <ul>
        <li>Review of near-final work, check for MVP</li>
        <li>Ask questions, discuss blockers</li>
        <li>Review 2nd retro notes</li>
        <li>Discuss presentation details</li>
      </ul>
    </li>
  </ul>

</section>

<section class="dropdown">
  <h3 id="development-reminders">Development Reminders</h3>

  <h4 id="gitgithub">Git/GitHub</h4>

  <ul>
    <li>Commit Frequently</li>
    <li>Decide on a <a href="https://www.atlassian.com/git/tutorials/comparing-workflows">git workflow</a></li>
    <li>Make branches and submit Pull Requests for each new feature.
      <ul>
        <li>DO NOT commit directly to main</li>
        <li>Keep your PRs as small as possible (one feature / user story per PR)</li>
        <li>Use screenshots and screencasts to demonstrate functionality.</li>
        <li>Your PR should be reviewed by at least one team member before it is merged.</li>
        <li>Tag your Project Manager if you have questions. DM your Project Manager letting them know you have tagged them.</li>
      </ul>
    </li>
  </ul>

  <h4 id="story-refinement">Story Refinement</h4>

  <ul>
    <li>You should be using a project management tool to keep track of your stories.</li>
    <li>At a minimum, the beginning of every sprint should include a “Story Refinement” meeting</li>
    <li>When doing a “Story Refinement” you should:
      <ul>
        <li>Make sure that the project board is up to date</li>
        <li>Look over the current backlog of stories and decide if you want to make any changes
          <ul>
            <li>Are there any stories that need to be updated, or require more details in the story card?</li>
            <li>Are these stories detailed enough that any team member could pick it up and work on it with a common vision?</li>
            <li>Are there any stories that need to be added?</li>
          </ul>
        </li>
        <li>Assign stories to individual team members or pairs
          <ul>
            <li>Be clear on what it is that everyone should be doing</li>
          </ul>
        </li>
      </ul>
    </li>
    <li>You may need to call additional refinement meetings during a sprint.</li>
  </ul>

  <h4 id="daily-check-ins">Daily Check-Ins</h4>

  <ul>
    <li>A “daily” (also known as a “stand up”) is a very brief meeting for the development team to keep in touch about what everyone is doing.</li>
    <li>During the daily check-in, each member of the team will take 1 - 2 minutes to answer these questions:
      <ul>
        <li>What have you been working on?</li>
        <li>What are you going to be working on?</li>
        <li>Is anything blocking you?</li>
      </ul>
    </li>
    <li>Every weekday you should send your PM a summary of the day’s daily check-in.</li>
  </ul>

  <h4 id="retros">Retros</h4>

  <ul>
    <li>Your team should have at least 2 retros during the course of the project.</li>
    <li>One will be scheduled on the calendar for you, and the other you will need to schedule as a team</li>
    <li>Consult the <a href="./retro_guide">Retro Guide</a> for more details</li>
  </ul>

</section>
:ET